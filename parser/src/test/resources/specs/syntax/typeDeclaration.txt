typeDeclaration

type A alias A
(typeDeclaration type A alias (anyType (valueType A)))

type A<A> alias A
(typeDeclaration type A < (typeList (anyType (valueType A))) > alias (anyType (valueType A)))

type A alias (A)
(typeDeclaration type A alias (anyType (valueType ( (valueType A) ))))

type A alias A<A>
(typeDeclaration type A alias (anyType (valueType A < (typeList (anyType (valueType A))) >)))

type A alias (A<A, A>)
(typeDeclaration type A alias (anyType (valueType ( (valueType A < (typeList (anyType (valueType A)) , (anyType (valueType A))) >) ))))

type A alias A -> (A -> A<A>)
(typeDeclaration type A alias (anyType (functionType (valueType A) -> ( (functionType (valueType A) -> (valueType A < (typeList (anyType (valueType A))) >)) ))))

type A alias () -> A
(typeDeclaration type A alias (anyType (functionType ( ) -> (valueType A))))

type A : a() -> A
(typeDeclaration type (valueType A) : (methodDeclarationList (methodDeclaration a ( ) -> (valueType A))))

type A extends A : a() -> A
(typeDeclaration type (valueType A) extends (typeList (anyType (valueType A))) : (methodDeclarationList (methodDeclaration a ( ) -> (valueType A))))

type A extends A, A : a() -> A
(typeDeclaration type (valueType A) extends (typeList (anyType (valueType A)) , (anyType (valueType A))) : (methodDeclarationList (methodDeclaration a ( ) -> (valueType A))))

type A extends A->A, A->A<A, A->A> : a(A, A<A>, A->A) -> A<A, A->A<A>>
(typeDeclaration type (valueType A) extends (typeList (anyType (functionType (valueType A) -> (valueType A))) , (anyType (functionType (valueType A) -> (valueType A < (typeList (anyType (valueType A)) , (anyType (functionType (valueType A) -> (valueType A)))) >)))) : (methodDeclarationList (methodDeclaration a ( (typeList (anyType (valueType A)) , (anyType (valueType A < (typeList (anyType (valueType A))) >)) , (anyType (functionType (valueType A) -> (valueType A)))) ) -> (valueType A < (typeList (anyType (valueType A)) , (anyType (functionType (valueType A) -> (valueType A < (typeList (anyType (valueType A))) >)))) >))))

type If<T> alias (Boolean, T, T) -> T
(typeDeclaration type If < (typeList (anyType (valueType T))) > alias (anyType (functionType ( (typeList (anyType (valueType Boolean)) , (anyType (valueType T)) , (anyType (valueType T))) ) -> (valueType T))))

